name: Typescript Builder

on:
  pull_request:
    paths:
      - "compile/typescript/builder/**"

jobs:
  interpreter:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Rust
        run: |
          rustup toolchain install stable --profile minimal --no-self-update
          rustup default stable
          rustup target add wasm32-wasi
        shell: bash

      - name: Make interpreter
        working-directory: compile/typescript/builder
        run: make interpreter

      - name: Upload js_interpreter.wasm to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: interpreter
          path: compile/typescript/builder/interpreter/target/wasm32-wasi/release/js_interpreter.wasm

  builder:
    name: builder-${{ matrix.name }}
    needs: interpreter
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: x86_64-unknown-linux-gnu
            os: ubuntu-20.04

          - name: aarch64-unknown-linux-gnu
            os: ubuntu-20.04

          - name: x86_64-apple-darwin
            os: macos-latest

          - name: aarch64-apple-darwin
            os: macos-latest

          - name: x86_64-pc-windows-msvc
            os: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Rust
        run: |
          rustup toolchain install stable --profile minimal --no-self-update
          rustup default stable
          rustup target add ${{ matrix.name }}
        shell: bash

      - name: Update APT Sources
        run: sudo apt-get update
        if: matrix.name == 'aarch64-unknown-linux-gnu'

      - name: Install ARM GCC toolchain
        run: sudo apt-get --assume-yes install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        if: matrix.name == 'aarch64-unknown-linux-gnu'

      - uses: actions/download-artifact@v3
        with:
          name: interpreter
          path: compile/typescript/builder/interpreter/target/wasm32-wasi/release/

      - name: Build CLI ${{ matrix.name }}
        working-directory: compile/typescript/builder
        run: make builder-${{ matrix.name }}
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

      - name: Commit CLI ${{ matrix.name }} Binary
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          commit: "--signoff"
          message: "Add: js_builder-${{ matrix.name }}"
          add: js_builder-${{ matrix.name }}