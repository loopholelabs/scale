//go:build tinygo || js || wasm

package main

import (
	scale "{{ .path }}"
	context "{{ .signature }}"
)

// needed to satisfy compiler
func main() {}

//export run
func run() uint64 {
	ctx := context.New()
	guestCtx := ctx.GuestContext()
	err := guestCtx.FromReadBuffer()
	if err != nil {
	    return packUint32(guestCtx.ErrorWriteBuffer(err))
	}
	ctx, err = scale.Scale(ctx)
	guestCtx = ctx.GuestContext()
	if err != nil {
	    return packUint32(guestCtx.ErrorWriteBuffer(err))
    }
	return packUint32(guestCtx.ToWriteBuffer())
}

//export resize
func resize(size uint32) uint32 {
	return context.Resize(size)
}

func packUint32(offset uint32, length uint32) uint64 {
	return uint64(offset)<<32 | uint64(length)
}