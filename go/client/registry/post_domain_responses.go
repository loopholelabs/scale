// Code generated by go-swagger; DO NOT EDIT.

package registry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/loopholelabs/scale/go/client/models"
)

// PostDomainReader is a Reader for the PostDomain structure.
type PostDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDomainUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDomainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewPostDomainPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDomainOK creates a PostDomainOK with default headers values
func NewPostDomainOK() *PostDomainOK {
	return &PostDomainOK{}
}

/*
PostDomainOK describes a response with status code 200, with default header values.

OK
*/
type PostDomainOK struct {
	Payload *models.ModelsCreateDomainResponse
}

// IsSuccess returns true when this post domain o k response has a 2xx status code
func (o *PostDomainOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post domain o k response has a 3xx status code
func (o *PostDomainOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post domain o k response has a 4xx status code
func (o *PostDomainOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post domain o k response has a 5xx status code
func (o *PostDomainOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post domain o k response a status code equal to that given
func (o *PostDomainOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post domain o k response
func (o *PostDomainOK) Code() int {
	return 200
}

func (o *PostDomainOK) Error() string {
	return fmt.Sprintf("[POST /domain][%d] postDomainOK  %+v", 200, o.Payload)
}

func (o *PostDomainOK) String() string {
	return fmt.Sprintf("[POST /domain][%d] postDomainOK  %+v", 200, o.Payload)
}

func (o *PostDomainOK) GetPayload() *models.ModelsCreateDomainResponse {
	return o.Payload
}

func (o *PostDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsCreateDomainResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDomainBadRequest creates a PostDomainBadRequest with default headers values
func NewPostDomainBadRequest() *PostDomainBadRequest {
	return &PostDomainBadRequest{}
}

/*
PostDomainBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostDomainBadRequest struct {
	Payload string
}

// IsSuccess returns true when this post domain bad request response has a 2xx status code
func (o *PostDomainBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post domain bad request response has a 3xx status code
func (o *PostDomainBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post domain bad request response has a 4xx status code
func (o *PostDomainBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post domain bad request response has a 5xx status code
func (o *PostDomainBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post domain bad request response a status code equal to that given
func (o *PostDomainBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post domain bad request response
func (o *PostDomainBadRequest) Code() int {
	return 400
}

func (o *PostDomainBadRequest) Error() string {
	return fmt.Sprintf("[POST /domain][%d] postDomainBadRequest  %+v", 400, o.Payload)
}

func (o *PostDomainBadRequest) String() string {
	return fmt.Sprintf("[POST /domain][%d] postDomainBadRequest  %+v", 400, o.Payload)
}

func (o *PostDomainBadRequest) GetPayload() string {
	return o.Payload
}

func (o *PostDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDomainUnauthorized creates a PostDomainUnauthorized with default headers values
func NewPostDomainUnauthorized() *PostDomainUnauthorized {
	return &PostDomainUnauthorized{}
}

/*
PostDomainUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostDomainUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this post domain unauthorized response has a 2xx status code
func (o *PostDomainUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post domain unauthorized response has a 3xx status code
func (o *PostDomainUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post domain unauthorized response has a 4xx status code
func (o *PostDomainUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post domain unauthorized response has a 5xx status code
func (o *PostDomainUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post domain unauthorized response a status code equal to that given
func (o *PostDomainUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post domain unauthorized response
func (o *PostDomainUnauthorized) Code() int {
	return 401
}

func (o *PostDomainUnauthorized) Error() string {
	return fmt.Sprintf("[POST /domain][%d] postDomainUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDomainUnauthorized) String() string {
	return fmt.Sprintf("[POST /domain][%d] postDomainUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDomainUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *PostDomainUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDomainNotFound creates a PostDomainNotFound with default headers values
func NewPostDomainNotFound() *PostDomainNotFound {
	return &PostDomainNotFound{}
}

/*
PostDomainNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostDomainNotFound struct {
	Payload string
}

// IsSuccess returns true when this post domain not found response has a 2xx status code
func (o *PostDomainNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post domain not found response has a 3xx status code
func (o *PostDomainNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post domain not found response has a 4xx status code
func (o *PostDomainNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post domain not found response has a 5xx status code
func (o *PostDomainNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post domain not found response a status code equal to that given
func (o *PostDomainNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post domain not found response
func (o *PostDomainNotFound) Code() int {
	return 404
}

func (o *PostDomainNotFound) Error() string {
	return fmt.Sprintf("[POST /domain][%d] postDomainNotFound  %+v", 404, o.Payload)
}

func (o *PostDomainNotFound) String() string {
	return fmt.Sprintf("[POST /domain][%d] postDomainNotFound  %+v", 404, o.Payload)
}

func (o *PostDomainNotFound) GetPayload() string {
	return o.Payload
}

func (o *PostDomainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDomainPreconditionFailed creates a PostDomainPreconditionFailed with default headers values
func NewPostDomainPreconditionFailed() *PostDomainPreconditionFailed {
	return &PostDomainPreconditionFailed{}
}

/*
PostDomainPreconditionFailed describes a response with status code 412, with default header values.

Precondition Failed
*/
type PostDomainPreconditionFailed struct {
	Payload string
}

// IsSuccess returns true when this post domain precondition failed response has a 2xx status code
func (o *PostDomainPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post domain precondition failed response has a 3xx status code
func (o *PostDomainPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post domain precondition failed response has a 4xx status code
func (o *PostDomainPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this post domain precondition failed response has a 5xx status code
func (o *PostDomainPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this post domain precondition failed response a status code equal to that given
func (o *PostDomainPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the post domain precondition failed response
func (o *PostDomainPreconditionFailed) Code() int {
	return 412
}

func (o *PostDomainPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /domain][%d] postDomainPreconditionFailed  %+v", 412, o.Payload)
}

func (o *PostDomainPreconditionFailed) String() string {
	return fmt.Sprintf("[POST /domain][%d] postDomainPreconditionFailed  %+v", 412, o.Payload)
}

func (o *PostDomainPreconditionFailed) GetPayload() string {
	return o.Payload
}

func (o *PostDomainPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDomainInternalServerError creates a PostDomainInternalServerError with default headers values
func NewPostDomainInternalServerError() *PostDomainInternalServerError {
	return &PostDomainInternalServerError{}
}

/*
PostDomainInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostDomainInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this post domain internal server error response has a 2xx status code
func (o *PostDomainInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post domain internal server error response has a 3xx status code
func (o *PostDomainInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post domain internal server error response has a 4xx status code
func (o *PostDomainInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post domain internal server error response has a 5xx status code
func (o *PostDomainInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post domain internal server error response a status code equal to that given
func (o *PostDomainInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post domain internal server error response
func (o *PostDomainInternalServerError) Code() int {
	return 500
}

func (o *PostDomainInternalServerError) Error() string {
	return fmt.Sprintf("[POST /domain][%d] postDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDomainInternalServerError) String() string {
	return fmt.Sprintf("[POST /domain][%d] postDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDomainInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *PostDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
