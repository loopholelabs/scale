// Code generated by go-swagger; DO NOT EDIT.

package registry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/loopholelabs/scale/client/models"
)

// GetRegistryFunctionReader is a Reader for the GetRegistryFunction structure.
type GetRegistryFunctionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRegistryFunctionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRegistryFunctionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRegistryFunctionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRegistryFunctionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRegistryFunctionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRegistryFunctionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRegistryFunctionOK creates a GetRegistryFunctionOK with default headers values
func NewGetRegistryFunctionOK() *GetRegistryFunctionOK {
	return &GetRegistryFunctionOK{}
}

/*
GetRegistryFunctionOK describes a response with status code 200, with default header values.

OK
*/
type GetRegistryFunctionOK struct {
	Payload []*models.ModelsGetFunctionResponse
}

// IsSuccess returns true when this get registry function o k response has a 2xx status code
func (o *GetRegistryFunctionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get registry function o k response has a 3xx status code
func (o *GetRegistryFunctionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get registry function o k response has a 4xx status code
func (o *GetRegistryFunctionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get registry function o k response has a 5xx status code
func (o *GetRegistryFunctionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get registry function o k response a status code equal to that given
func (o *GetRegistryFunctionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get registry function o k response
func (o *GetRegistryFunctionOK) Code() int {
	return 200
}

func (o *GetRegistryFunctionOK) Error() string {
	return fmt.Sprintf("[GET /registry/function][%d] getRegistryFunctionOK  %+v", 200, o.Payload)
}

func (o *GetRegistryFunctionOK) String() string {
	return fmt.Sprintf("[GET /registry/function][%d] getRegistryFunctionOK  %+v", 200, o.Payload)
}

func (o *GetRegistryFunctionOK) GetPayload() []*models.ModelsGetFunctionResponse {
	return o.Payload
}

func (o *GetRegistryFunctionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegistryFunctionBadRequest creates a GetRegistryFunctionBadRequest with default headers values
func NewGetRegistryFunctionBadRequest() *GetRegistryFunctionBadRequest {
	return &GetRegistryFunctionBadRequest{}
}

/*
GetRegistryFunctionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRegistryFunctionBadRequest struct {
	Payload string
}

// IsSuccess returns true when this get registry function bad request response has a 2xx status code
func (o *GetRegistryFunctionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get registry function bad request response has a 3xx status code
func (o *GetRegistryFunctionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get registry function bad request response has a 4xx status code
func (o *GetRegistryFunctionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get registry function bad request response has a 5xx status code
func (o *GetRegistryFunctionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get registry function bad request response a status code equal to that given
func (o *GetRegistryFunctionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get registry function bad request response
func (o *GetRegistryFunctionBadRequest) Code() int {
	return 400
}

func (o *GetRegistryFunctionBadRequest) Error() string {
	return fmt.Sprintf("[GET /registry/function][%d] getRegistryFunctionBadRequest  %+v", 400, o.Payload)
}

func (o *GetRegistryFunctionBadRequest) String() string {
	return fmt.Sprintf("[GET /registry/function][%d] getRegistryFunctionBadRequest  %+v", 400, o.Payload)
}

func (o *GetRegistryFunctionBadRequest) GetPayload() string {
	return o.Payload
}

func (o *GetRegistryFunctionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegistryFunctionUnauthorized creates a GetRegistryFunctionUnauthorized with default headers values
func NewGetRegistryFunctionUnauthorized() *GetRegistryFunctionUnauthorized {
	return &GetRegistryFunctionUnauthorized{}
}

/*
GetRegistryFunctionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRegistryFunctionUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this get registry function unauthorized response has a 2xx status code
func (o *GetRegistryFunctionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get registry function unauthorized response has a 3xx status code
func (o *GetRegistryFunctionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get registry function unauthorized response has a 4xx status code
func (o *GetRegistryFunctionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get registry function unauthorized response has a 5xx status code
func (o *GetRegistryFunctionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get registry function unauthorized response a status code equal to that given
func (o *GetRegistryFunctionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get registry function unauthorized response
func (o *GetRegistryFunctionUnauthorized) Code() int {
	return 401
}

func (o *GetRegistryFunctionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /registry/function][%d] getRegistryFunctionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRegistryFunctionUnauthorized) String() string {
	return fmt.Sprintf("[GET /registry/function][%d] getRegistryFunctionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRegistryFunctionUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *GetRegistryFunctionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegistryFunctionNotFound creates a GetRegistryFunctionNotFound with default headers values
func NewGetRegistryFunctionNotFound() *GetRegistryFunctionNotFound {
	return &GetRegistryFunctionNotFound{}
}

/*
GetRegistryFunctionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRegistryFunctionNotFound struct {
	Payload string
}

// IsSuccess returns true when this get registry function not found response has a 2xx status code
func (o *GetRegistryFunctionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get registry function not found response has a 3xx status code
func (o *GetRegistryFunctionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get registry function not found response has a 4xx status code
func (o *GetRegistryFunctionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get registry function not found response has a 5xx status code
func (o *GetRegistryFunctionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get registry function not found response a status code equal to that given
func (o *GetRegistryFunctionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get registry function not found response
func (o *GetRegistryFunctionNotFound) Code() int {
	return 404
}

func (o *GetRegistryFunctionNotFound) Error() string {
	return fmt.Sprintf("[GET /registry/function][%d] getRegistryFunctionNotFound  %+v", 404, o.Payload)
}

func (o *GetRegistryFunctionNotFound) String() string {
	return fmt.Sprintf("[GET /registry/function][%d] getRegistryFunctionNotFound  %+v", 404, o.Payload)
}

func (o *GetRegistryFunctionNotFound) GetPayload() string {
	return o.Payload
}

func (o *GetRegistryFunctionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegistryFunctionInternalServerError creates a GetRegistryFunctionInternalServerError with default headers values
func NewGetRegistryFunctionInternalServerError() *GetRegistryFunctionInternalServerError {
	return &GetRegistryFunctionInternalServerError{}
}

/*
GetRegistryFunctionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRegistryFunctionInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this get registry function internal server error response has a 2xx status code
func (o *GetRegistryFunctionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get registry function internal server error response has a 3xx status code
func (o *GetRegistryFunctionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get registry function internal server error response has a 4xx status code
func (o *GetRegistryFunctionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get registry function internal server error response has a 5xx status code
func (o *GetRegistryFunctionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get registry function internal server error response a status code equal to that given
func (o *GetRegistryFunctionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get registry function internal server error response
func (o *GetRegistryFunctionInternalServerError) Code() int {
	return 500
}

func (o *GetRegistryFunctionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /registry/function][%d] getRegistryFunctionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRegistryFunctionInternalServerError) String() string {
	return fmt.Sprintf("[GET /registry/function][%d] getRegistryFunctionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRegistryFunctionInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *GetRegistryFunctionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
