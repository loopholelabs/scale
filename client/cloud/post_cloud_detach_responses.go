// Code generated by go-swagger; DO NOT EDIT.

package cloud

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/loopholelabs/scale/client/models"
)

// PostCloudDetachReader is a Reader for the PostCloudDetach structure.
type PostCloudDetachReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCloudDetachReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostCloudDetachOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostCloudDetachBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostCloudDetachUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostCloudDetachNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostCloudDetachInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cloud/detach] PostCloudDetach", response, response.Code())
	}
}

// NewPostCloudDetachOK creates a PostCloudDetachOK with default headers values
func NewPostCloudDetachOK() *PostCloudDetachOK {
	return &PostCloudDetachOK{}
}

/*
PostCloudDetachOK describes a response with status code 200, with default header values.

OK
*/
type PostCloudDetachOK struct {
	Payload *models.ModelsDeploymentResponse
}

// IsSuccess returns true when this post cloud detach o k response has a 2xx status code
func (o *PostCloudDetachOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post cloud detach o k response has a 3xx status code
func (o *PostCloudDetachOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post cloud detach o k response has a 4xx status code
func (o *PostCloudDetachOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post cloud detach o k response has a 5xx status code
func (o *PostCloudDetachOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post cloud detach o k response a status code equal to that given
func (o *PostCloudDetachOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post cloud detach o k response
func (o *PostCloudDetachOK) Code() int {
	return 200
}

func (o *PostCloudDetachOK) Error() string {
	return fmt.Sprintf("[POST /cloud/detach][%d] postCloudDetachOK  %+v", 200, o.Payload)
}

func (o *PostCloudDetachOK) String() string {
	return fmt.Sprintf("[POST /cloud/detach][%d] postCloudDetachOK  %+v", 200, o.Payload)
}

func (o *PostCloudDetachOK) GetPayload() *models.ModelsDeploymentResponse {
	return o.Payload
}

func (o *PostCloudDetachOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsDeploymentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCloudDetachBadRequest creates a PostCloudDetachBadRequest with default headers values
func NewPostCloudDetachBadRequest() *PostCloudDetachBadRequest {
	return &PostCloudDetachBadRequest{}
}

/*
PostCloudDetachBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostCloudDetachBadRequest struct {
	Payload string
}

// IsSuccess returns true when this post cloud detach bad request response has a 2xx status code
func (o *PostCloudDetachBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post cloud detach bad request response has a 3xx status code
func (o *PostCloudDetachBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post cloud detach bad request response has a 4xx status code
func (o *PostCloudDetachBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post cloud detach bad request response has a 5xx status code
func (o *PostCloudDetachBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post cloud detach bad request response a status code equal to that given
func (o *PostCloudDetachBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post cloud detach bad request response
func (o *PostCloudDetachBadRequest) Code() int {
	return 400
}

func (o *PostCloudDetachBadRequest) Error() string {
	return fmt.Sprintf("[POST /cloud/detach][%d] postCloudDetachBadRequest  %+v", 400, o.Payload)
}

func (o *PostCloudDetachBadRequest) String() string {
	return fmt.Sprintf("[POST /cloud/detach][%d] postCloudDetachBadRequest  %+v", 400, o.Payload)
}

func (o *PostCloudDetachBadRequest) GetPayload() string {
	return o.Payload
}

func (o *PostCloudDetachBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCloudDetachUnauthorized creates a PostCloudDetachUnauthorized with default headers values
func NewPostCloudDetachUnauthorized() *PostCloudDetachUnauthorized {
	return &PostCloudDetachUnauthorized{}
}

/*
PostCloudDetachUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostCloudDetachUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this post cloud detach unauthorized response has a 2xx status code
func (o *PostCloudDetachUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post cloud detach unauthorized response has a 3xx status code
func (o *PostCloudDetachUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post cloud detach unauthorized response has a 4xx status code
func (o *PostCloudDetachUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post cloud detach unauthorized response has a 5xx status code
func (o *PostCloudDetachUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post cloud detach unauthorized response a status code equal to that given
func (o *PostCloudDetachUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post cloud detach unauthorized response
func (o *PostCloudDetachUnauthorized) Code() int {
	return 401
}

func (o *PostCloudDetachUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cloud/detach][%d] postCloudDetachUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCloudDetachUnauthorized) String() string {
	return fmt.Sprintf("[POST /cloud/detach][%d] postCloudDetachUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCloudDetachUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *PostCloudDetachUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCloudDetachNotFound creates a PostCloudDetachNotFound with default headers values
func NewPostCloudDetachNotFound() *PostCloudDetachNotFound {
	return &PostCloudDetachNotFound{}
}

/*
PostCloudDetachNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostCloudDetachNotFound struct {
	Payload string
}

// IsSuccess returns true when this post cloud detach not found response has a 2xx status code
func (o *PostCloudDetachNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post cloud detach not found response has a 3xx status code
func (o *PostCloudDetachNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post cloud detach not found response has a 4xx status code
func (o *PostCloudDetachNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post cloud detach not found response has a 5xx status code
func (o *PostCloudDetachNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post cloud detach not found response a status code equal to that given
func (o *PostCloudDetachNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post cloud detach not found response
func (o *PostCloudDetachNotFound) Code() int {
	return 404
}

func (o *PostCloudDetachNotFound) Error() string {
	return fmt.Sprintf("[POST /cloud/detach][%d] postCloudDetachNotFound  %+v", 404, o.Payload)
}

func (o *PostCloudDetachNotFound) String() string {
	return fmt.Sprintf("[POST /cloud/detach][%d] postCloudDetachNotFound  %+v", 404, o.Payload)
}

func (o *PostCloudDetachNotFound) GetPayload() string {
	return o.Payload
}

func (o *PostCloudDetachNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCloudDetachInternalServerError creates a PostCloudDetachInternalServerError with default headers values
func NewPostCloudDetachInternalServerError() *PostCloudDetachInternalServerError {
	return &PostCloudDetachInternalServerError{}
}

/*
PostCloudDetachInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostCloudDetachInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this post cloud detach internal server error response has a 2xx status code
func (o *PostCloudDetachInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post cloud detach internal server error response has a 3xx status code
func (o *PostCloudDetachInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post cloud detach internal server error response has a 4xx status code
func (o *PostCloudDetachInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post cloud detach internal server error response has a 5xx status code
func (o *PostCloudDetachInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post cloud detach internal server error response a status code equal to that given
func (o *PostCloudDetachInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post cloud detach internal server error response
func (o *PostCloudDetachInternalServerError) Code() int {
	return 500
}

func (o *PostCloudDetachInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cloud/detach][%d] postCloudDetachInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCloudDetachInternalServerError) String() string {
	return fmt.Sprintf("[POST /cloud/detach][%d] postCloudDetachInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCloudDetachInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *PostCloudDetachInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
