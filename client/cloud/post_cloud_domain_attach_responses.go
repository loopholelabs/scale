// Code generated by go-swagger; DO NOT EDIT.

package cloud

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/loopholelabs/scale/client/models"
)

// PostCloudDomainAttachReader is a Reader for the PostCloudDomainAttach structure.
type PostCloudDomainAttachReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCloudDomainAttachReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostCloudDomainAttachOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostCloudDomainAttachBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostCloudDomainAttachUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostCloudDomainAttachNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostCloudDomainAttachInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cloud/domain/attach] PostCloudDomainAttach", response, response.Code())
	}
}

// NewPostCloudDomainAttachOK creates a PostCloudDomainAttachOK with default headers values
func NewPostCloudDomainAttachOK() *PostCloudDomainAttachOK {
	return &PostCloudDomainAttachOK{}
}

/*
PostCloudDomainAttachOK describes a response with status code 200, with default header values.

OK
*/
type PostCloudDomainAttachOK struct {
	Payload *models.ModelsDeploymentResponse
}

// IsSuccess returns true when this post cloud domain attach o k response has a 2xx status code
func (o *PostCloudDomainAttachOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post cloud domain attach o k response has a 3xx status code
func (o *PostCloudDomainAttachOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post cloud domain attach o k response has a 4xx status code
func (o *PostCloudDomainAttachOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post cloud domain attach o k response has a 5xx status code
func (o *PostCloudDomainAttachOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post cloud domain attach o k response a status code equal to that given
func (o *PostCloudDomainAttachOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post cloud domain attach o k response
func (o *PostCloudDomainAttachOK) Code() int {
	return 200
}

func (o *PostCloudDomainAttachOK) Error() string {
	return fmt.Sprintf("[POST /cloud/domain/attach][%d] postCloudDomainAttachOK  %+v", 200, o.Payload)
}

func (o *PostCloudDomainAttachOK) String() string {
	return fmt.Sprintf("[POST /cloud/domain/attach][%d] postCloudDomainAttachOK  %+v", 200, o.Payload)
}

func (o *PostCloudDomainAttachOK) GetPayload() *models.ModelsDeploymentResponse {
	return o.Payload
}

func (o *PostCloudDomainAttachOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsDeploymentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCloudDomainAttachBadRequest creates a PostCloudDomainAttachBadRequest with default headers values
func NewPostCloudDomainAttachBadRequest() *PostCloudDomainAttachBadRequest {
	return &PostCloudDomainAttachBadRequest{}
}

/*
PostCloudDomainAttachBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostCloudDomainAttachBadRequest struct {
	Payload string
}

// IsSuccess returns true when this post cloud domain attach bad request response has a 2xx status code
func (o *PostCloudDomainAttachBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post cloud domain attach bad request response has a 3xx status code
func (o *PostCloudDomainAttachBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post cloud domain attach bad request response has a 4xx status code
func (o *PostCloudDomainAttachBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post cloud domain attach bad request response has a 5xx status code
func (o *PostCloudDomainAttachBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post cloud domain attach bad request response a status code equal to that given
func (o *PostCloudDomainAttachBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post cloud domain attach bad request response
func (o *PostCloudDomainAttachBadRequest) Code() int {
	return 400
}

func (o *PostCloudDomainAttachBadRequest) Error() string {
	return fmt.Sprintf("[POST /cloud/domain/attach][%d] postCloudDomainAttachBadRequest  %+v", 400, o.Payload)
}

func (o *PostCloudDomainAttachBadRequest) String() string {
	return fmt.Sprintf("[POST /cloud/domain/attach][%d] postCloudDomainAttachBadRequest  %+v", 400, o.Payload)
}

func (o *PostCloudDomainAttachBadRequest) GetPayload() string {
	return o.Payload
}

func (o *PostCloudDomainAttachBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCloudDomainAttachUnauthorized creates a PostCloudDomainAttachUnauthorized with default headers values
func NewPostCloudDomainAttachUnauthorized() *PostCloudDomainAttachUnauthorized {
	return &PostCloudDomainAttachUnauthorized{}
}

/*
PostCloudDomainAttachUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostCloudDomainAttachUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this post cloud domain attach unauthorized response has a 2xx status code
func (o *PostCloudDomainAttachUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post cloud domain attach unauthorized response has a 3xx status code
func (o *PostCloudDomainAttachUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post cloud domain attach unauthorized response has a 4xx status code
func (o *PostCloudDomainAttachUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post cloud domain attach unauthorized response has a 5xx status code
func (o *PostCloudDomainAttachUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post cloud domain attach unauthorized response a status code equal to that given
func (o *PostCloudDomainAttachUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post cloud domain attach unauthorized response
func (o *PostCloudDomainAttachUnauthorized) Code() int {
	return 401
}

func (o *PostCloudDomainAttachUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cloud/domain/attach][%d] postCloudDomainAttachUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCloudDomainAttachUnauthorized) String() string {
	return fmt.Sprintf("[POST /cloud/domain/attach][%d] postCloudDomainAttachUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCloudDomainAttachUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *PostCloudDomainAttachUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCloudDomainAttachNotFound creates a PostCloudDomainAttachNotFound with default headers values
func NewPostCloudDomainAttachNotFound() *PostCloudDomainAttachNotFound {
	return &PostCloudDomainAttachNotFound{}
}

/*
PostCloudDomainAttachNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostCloudDomainAttachNotFound struct {
	Payload string
}

// IsSuccess returns true when this post cloud domain attach not found response has a 2xx status code
func (o *PostCloudDomainAttachNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post cloud domain attach not found response has a 3xx status code
func (o *PostCloudDomainAttachNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post cloud domain attach not found response has a 4xx status code
func (o *PostCloudDomainAttachNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post cloud domain attach not found response has a 5xx status code
func (o *PostCloudDomainAttachNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post cloud domain attach not found response a status code equal to that given
func (o *PostCloudDomainAttachNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post cloud domain attach not found response
func (o *PostCloudDomainAttachNotFound) Code() int {
	return 404
}

func (o *PostCloudDomainAttachNotFound) Error() string {
	return fmt.Sprintf("[POST /cloud/domain/attach][%d] postCloudDomainAttachNotFound  %+v", 404, o.Payload)
}

func (o *PostCloudDomainAttachNotFound) String() string {
	return fmt.Sprintf("[POST /cloud/domain/attach][%d] postCloudDomainAttachNotFound  %+v", 404, o.Payload)
}

func (o *PostCloudDomainAttachNotFound) GetPayload() string {
	return o.Payload
}

func (o *PostCloudDomainAttachNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCloudDomainAttachInternalServerError creates a PostCloudDomainAttachInternalServerError with default headers values
func NewPostCloudDomainAttachInternalServerError() *PostCloudDomainAttachInternalServerError {
	return &PostCloudDomainAttachInternalServerError{}
}

/*
PostCloudDomainAttachInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostCloudDomainAttachInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this post cloud domain attach internal server error response has a 2xx status code
func (o *PostCloudDomainAttachInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post cloud domain attach internal server error response has a 3xx status code
func (o *PostCloudDomainAttachInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post cloud domain attach internal server error response has a 4xx status code
func (o *PostCloudDomainAttachInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post cloud domain attach internal server error response has a 5xx status code
func (o *PostCloudDomainAttachInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post cloud domain attach internal server error response a status code equal to that given
func (o *PostCloudDomainAttachInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post cloud domain attach internal server error response
func (o *PostCloudDomainAttachInternalServerError) Code() int {
	return 500
}

func (o *PostCloudDomainAttachInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cloud/domain/attach][%d] postCloudDomainAttachInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCloudDomainAttachInternalServerError) String() string {
	return fmt.Sprintf("[POST /cloud/domain/attach][%d] postCloudDomainAttachInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCloudDomainAttachInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *PostCloudDomainAttachInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
