// Code generated by go-swagger; DO NOT EDIT.

package deploy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/loopholelabs/scale/client/models"
)

// PostDeployFunctionReader is a Reader for the PostDeployFunction structure.
type PostDeployFunctionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDeployFunctionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDeployFunctionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDeployFunctionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDeployFunctionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDeployFunctionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDeployFunctionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDeployFunctionOK creates a PostDeployFunctionOK with default headers values
func NewPostDeployFunctionOK() *PostDeployFunctionOK {
	return &PostDeployFunctionOK{}
}

/*
PostDeployFunctionOK describes a response with status code 200, with default header values.

OK
*/
type PostDeployFunctionOK struct {
	Payload *models.ModelsDeployFunctionResponse
}

// IsSuccess returns true when this post deploy function o k response has a 2xx status code
func (o *PostDeployFunctionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post deploy function o k response has a 3xx status code
func (o *PostDeployFunctionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post deploy function o k response has a 4xx status code
func (o *PostDeployFunctionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post deploy function o k response has a 5xx status code
func (o *PostDeployFunctionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post deploy function o k response a status code equal to that given
func (o *PostDeployFunctionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post deploy function o k response
func (o *PostDeployFunctionOK) Code() int {
	return 200
}

func (o *PostDeployFunctionOK) Error() string {
	return fmt.Sprintf("[POST /deploy/function][%d] postDeployFunctionOK  %+v", 200, o.Payload)
}

func (o *PostDeployFunctionOK) String() string {
	return fmt.Sprintf("[POST /deploy/function][%d] postDeployFunctionOK  %+v", 200, o.Payload)
}

func (o *PostDeployFunctionOK) GetPayload() *models.ModelsDeployFunctionResponse {
	return o.Payload
}

func (o *PostDeployFunctionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsDeployFunctionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDeployFunctionBadRequest creates a PostDeployFunctionBadRequest with default headers values
func NewPostDeployFunctionBadRequest() *PostDeployFunctionBadRequest {
	return &PostDeployFunctionBadRequest{}
}

/*
PostDeployFunctionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostDeployFunctionBadRequest struct {
	Payload string
}

// IsSuccess returns true when this post deploy function bad request response has a 2xx status code
func (o *PostDeployFunctionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post deploy function bad request response has a 3xx status code
func (o *PostDeployFunctionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post deploy function bad request response has a 4xx status code
func (o *PostDeployFunctionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post deploy function bad request response has a 5xx status code
func (o *PostDeployFunctionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post deploy function bad request response a status code equal to that given
func (o *PostDeployFunctionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post deploy function bad request response
func (o *PostDeployFunctionBadRequest) Code() int {
	return 400
}

func (o *PostDeployFunctionBadRequest) Error() string {
	return fmt.Sprintf("[POST /deploy/function][%d] postDeployFunctionBadRequest  %+v", 400, o.Payload)
}

func (o *PostDeployFunctionBadRequest) String() string {
	return fmt.Sprintf("[POST /deploy/function][%d] postDeployFunctionBadRequest  %+v", 400, o.Payload)
}

func (o *PostDeployFunctionBadRequest) GetPayload() string {
	return o.Payload
}

func (o *PostDeployFunctionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDeployFunctionUnauthorized creates a PostDeployFunctionUnauthorized with default headers values
func NewPostDeployFunctionUnauthorized() *PostDeployFunctionUnauthorized {
	return &PostDeployFunctionUnauthorized{}
}

/*
PostDeployFunctionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostDeployFunctionUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this post deploy function unauthorized response has a 2xx status code
func (o *PostDeployFunctionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post deploy function unauthorized response has a 3xx status code
func (o *PostDeployFunctionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post deploy function unauthorized response has a 4xx status code
func (o *PostDeployFunctionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post deploy function unauthorized response has a 5xx status code
func (o *PostDeployFunctionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post deploy function unauthorized response a status code equal to that given
func (o *PostDeployFunctionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post deploy function unauthorized response
func (o *PostDeployFunctionUnauthorized) Code() int {
	return 401
}

func (o *PostDeployFunctionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /deploy/function][%d] postDeployFunctionUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDeployFunctionUnauthorized) String() string {
	return fmt.Sprintf("[POST /deploy/function][%d] postDeployFunctionUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDeployFunctionUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *PostDeployFunctionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDeployFunctionNotFound creates a PostDeployFunctionNotFound with default headers values
func NewPostDeployFunctionNotFound() *PostDeployFunctionNotFound {
	return &PostDeployFunctionNotFound{}
}

/*
PostDeployFunctionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostDeployFunctionNotFound struct {
	Payload string
}

// IsSuccess returns true when this post deploy function not found response has a 2xx status code
func (o *PostDeployFunctionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post deploy function not found response has a 3xx status code
func (o *PostDeployFunctionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post deploy function not found response has a 4xx status code
func (o *PostDeployFunctionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post deploy function not found response has a 5xx status code
func (o *PostDeployFunctionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post deploy function not found response a status code equal to that given
func (o *PostDeployFunctionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post deploy function not found response
func (o *PostDeployFunctionNotFound) Code() int {
	return 404
}

func (o *PostDeployFunctionNotFound) Error() string {
	return fmt.Sprintf("[POST /deploy/function][%d] postDeployFunctionNotFound  %+v", 404, o.Payload)
}

func (o *PostDeployFunctionNotFound) String() string {
	return fmt.Sprintf("[POST /deploy/function][%d] postDeployFunctionNotFound  %+v", 404, o.Payload)
}

func (o *PostDeployFunctionNotFound) GetPayload() string {
	return o.Payload
}

func (o *PostDeployFunctionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDeployFunctionInternalServerError creates a PostDeployFunctionInternalServerError with default headers values
func NewPostDeployFunctionInternalServerError() *PostDeployFunctionInternalServerError {
	return &PostDeployFunctionInternalServerError{}
}

/*
PostDeployFunctionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostDeployFunctionInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this post deploy function internal server error response has a 2xx status code
func (o *PostDeployFunctionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post deploy function internal server error response has a 3xx status code
func (o *PostDeployFunctionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post deploy function internal server error response has a 4xx status code
func (o *PostDeployFunctionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post deploy function internal server error response has a 5xx status code
func (o *PostDeployFunctionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post deploy function internal server error response a status code equal to that given
func (o *PostDeployFunctionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post deploy function internal server error response
func (o *PostDeployFunctionInternalServerError) Code() int {
	return 500
}

func (o *PostDeployFunctionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /deploy/function][%d] postDeployFunctionInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDeployFunctionInternalServerError) String() string {
	return fmt.Sprintf("[POST /deploy/function][%d] postDeployFunctionInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDeployFunctionInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *PostDeployFunctionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
