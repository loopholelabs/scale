// Code generated by go-swagger; DO NOT EDIT.

package registry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostRegistrySignatureParams creates a new PostRegistrySignatureParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostRegistrySignatureParams() *PostRegistrySignatureParams {
	return &PostRegistrySignatureParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostRegistrySignatureParamsWithTimeout creates a new PostRegistrySignatureParams object
// with the ability to set a timeout on a request.
func NewPostRegistrySignatureParamsWithTimeout(timeout time.Duration) *PostRegistrySignatureParams {
	return &PostRegistrySignatureParams{
		timeout: timeout,
	}
}

// NewPostRegistrySignatureParamsWithContext creates a new PostRegistrySignatureParams object
// with the ability to set a context for a request.
func NewPostRegistrySignatureParamsWithContext(ctx context.Context) *PostRegistrySignatureParams {
	return &PostRegistrySignatureParams{
		Context: ctx,
	}
}

// NewPostRegistrySignatureParamsWithHTTPClient creates a new PostRegistrySignatureParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostRegistrySignatureParamsWithHTTPClient(client *http.Client) *PostRegistrySignatureParams {
	return &PostRegistrySignatureParams{
		HTTPClient: client,
	}
}

/*
PostRegistrySignatureParams contains all the parameters to send to the API endpoint

	for the post registry signature operation.

	Typically these are written to a http.Request.
*/
type PostRegistrySignatureParams struct {

	/* Public.

	   public
	*/
	Public *bool

	/* Signature.

	   signature
	*/
	Signature runtime.NamedReadCloser

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post registry signature params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostRegistrySignatureParams) WithDefaults() *PostRegistrySignatureParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post registry signature params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostRegistrySignatureParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post registry signature params
func (o *PostRegistrySignatureParams) WithTimeout(timeout time.Duration) *PostRegistrySignatureParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post registry signature params
func (o *PostRegistrySignatureParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post registry signature params
func (o *PostRegistrySignatureParams) WithContext(ctx context.Context) *PostRegistrySignatureParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post registry signature params
func (o *PostRegistrySignatureParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post registry signature params
func (o *PostRegistrySignatureParams) WithHTTPClient(client *http.Client) *PostRegistrySignatureParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post registry signature params
func (o *PostRegistrySignatureParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPublic adds the public to the post registry signature params
func (o *PostRegistrySignatureParams) WithPublic(public *bool) *PostRegistrySignatureParams {
	o.SetPublic(public)
	return o
}

// SetPublic adds the public to the post registry signature params
func (o *PostRegistrySignatureParams) SetPublic(public *bool) {
	o.Public = public
}

// WithSignature adds the signature to the post registry signature params
func (o *PostRegistrySignatureParams) WithSignature(signature runtime.NamedReadCloser) *PostRegistrySignatureParams {
	o.SetSignature(signature)
	return o
}

// SetSignature adds the signature to the post registry signature params
func (o *PostRegistrySignatureParams) SetSignature(signature runtime.NamedReadCloser) {
	o.Signature = signature
}

// WriteToRequest writes these params to a swagger request
func (o *PostRegistrySignatureParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Public != nil {

		// form param public
		var frPublic bool
		if o.Public != nil {
			frPublic = *o.Public
		}
		fPublic := swag.FormatBool(frPublic)
		if fPublic != "" {
			if err := r.SetFormParam("public", fPublic); err != nil {
				return err
			}
		}
	}
	// form file param signature
	if err := r.SetFileParam("signature", o.Signature); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
