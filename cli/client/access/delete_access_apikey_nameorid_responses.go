// Code generated by go-swagger; DO NOT EDIT.

package access

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteAccessApikeyNameoridReader is a Reader for the DeleteAccessApikeyNameorid structure.
type DeleteAccessApikeyNameoridReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAccessApikeyNameoridReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAccessApikeyNameoridOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteAccessApikeyNameoridUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAccessApikeyNameoridNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAccessApikeyNameoridInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /access/apikey/{nameorid}] DeleteAccessApikeyNameorid", response, response.Code())
	}
}

// NewDeleteAccessApikeyNameoridOK creates a DeleteAccessApikeyNameoridOK with default headers values
func NewDeleteAccessApikeyNameoridOK() *DeleteAccessApikeyNameoridOK {
	return &DeleteAccessApikeyNameoridOK{}
}

/*
DeleteAccessApikeyNameoridOK describes a response with status code 200, with default header values.

OK
*/
type DeleteAccessApikeyNameoridOK struct {
	Payload string
}

// IsSuccess returns true when this delete access apikey nameorid o k response has a 2xx status code
func (o *DeleteAccessApikeyNameoridOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete access apikey nameorid o k response has a 3xx status code
func (o *DeleteAccessApikeyNameoridOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete access apikey nameorid o k response has a 4xx status code
func (o *DeleteAccessApikeyNameoridOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete access apikey nameorid o k response has a 5xx status code
func (o *DeleteAccessApikeyNameoridOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete access apikey nameorid o k response a status code equal to that given
func (o *DeleteAccessApikeyNameoridOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete access apikey nameorid o k response
func (o *DeleteAccessApikeyNameoridOK) Code() int {
	return 200
}

func (o *DeleteAccessApikeyNameoridOK) Error() string {
	return fmt.Sprintf("[DELETE /access/apikey/{nameorid}][%d] deleteAccessApikeyNameoridOK  %+v", 200, o.Payload)
}

func (o *DeleteAccessApikeyNameoridOK) String() string {
	return fmt.Sprintf("[DELETE /access/apikey/{nameorid}][%d] deleteAccessApikeyNameoridOK  %+v", 200, o.Payload)
}

func (o *DeleteAccessApikeyNameoridOK) GetPayload() string {
	return o.Payload
}

func (o *DeleteAccessApikeyNameoridOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccessApikeyNameoridUnauthorized creates a DeleteAccessApikeyNameoridUnauthorized with default headers values
func NewDeleteAccessApikeyNameoridUnauthorized() *DeleteAccessApikeyNameoridUnauthorized {
	return &DeleteAccessApikeyNameoridUnauthorized{}
}

/*
DeleteAccessApikeyNameoridUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteAccessApikeyNameoridUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this delete access apikey nameorid unauthorized response has a 2xx status code
func (o *DeleteAccessApikeyNameoridUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete access apikey nameorid unauthorized response has a 3xx status code
func (o *DeleteAccessApikeyNameoridUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete access apikey nameorid unauthorized response has a 4xx status code
func (o *DeleteAccessApikeyNameoridUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete access apikey nameorid unauthorized response has a 5xx status code
func (o *DeleteAccessApikeyNameoridUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete access apikey nameorid unauthorized response a status code equal to that given
func (o *DeleteAccessApikeyNameoridUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete access apikey nameorid unauthorized response
func (o *DeleteAccessApikeyNameoridUnauthorized) Code() int {
	return 401
}

func (o *DeleteAccessApikeyNameoridUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /access/apikey/{nameorid}][%d] deleteAccessApikeyNameoridUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAccessApikeyNameoridUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /access/apikey/{nameorid}][%d] deleteAccessApikeyNameoridUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAccessApikeyNameoridUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *DeleteAccessApikeyNameoridUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccessApikeyNameoridNotFound creates a DeleteAccessApikeyNameoridNotFound with default headers values
func NewDeleteAccessApikeyNameoridNotFound() *DeleteAccessApikeyNameoridNotFound {
	return &DeleteAccessApikeyNameoridNotFound{}
}

/*
DeleteAccessApikeyNameoridNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteAccessApikeyNameoridNotFound struct {
	Payload string
}

// IsSuccess returns true when this delete access apikey nameorid not found response has a 2xx status code
func (o *DeleteAccessApikeyNameoridNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete access apikey nameorid not found response has a 3xx status code
func (o *DeleteAccessApikeyNameoridNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete access apikey nameorid not found response has a 4xx status code
func (o *DeleteAccessApikeyNameoridNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete access apikey nameorid not found response has a 5xx status code
func (o *DeleteAccessApikeyNameoridNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete access apikey nameorid not found response a status code equal to that given
func (o *DeleteAccessApikeyNameoridNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete access apikey nameorid not found response
func (o *DeleteAccessApikeyNameoridNotFound) Code() int {
	return 404
}

func (o *DeleteAccessApikeyNameoridNotFound) Error() string {
	return fmt.Sprintf("[DELETE /access/apikey/{nameorid}][%d] deleteAccessApikeyNameoridNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAccessApikeyNameoridNotFound) String() string {
	return fmt.Sprintf("[DELETE /access/apikey/{nameorid}][%d] deleteAccessApikeyNameoridNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAccessApikeyNameoridNotFound) GetPayload() string {
	return o.Payload
}

func (o *DeleteAccessApikeyNameoridNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccessApikeyNameoridInternalServerError creates a DeleteAccessApikeyNameoridInternalServerError with default headers values
func NewDeleteAccessApikeyNameoridInternalServerError() *DeleteAccessApikeyNameoridInternalServerError {
	return &DeleteAccessApikeyNameoridInternalServerError{}
}

/*
DeleteAccessApikeyNameoridInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteAccessApikeyNameoridInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this delete access apikey nameorid internal server error response has a 2xx status code
func (o *DeleteAccessApikeyNameoridInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete access apikey nameorid internal server error response has a 3xx status code
func (o *DeleteAccessApikeyNameoridInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete access apikey nameorid internal server error response has a 4xx status code
func (o *DeleteAccessApikeyNameoridInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete access apikey nameorid internal server error response has a 5xx status code
func (o *DeleteAccessApikeyNameoridInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete access apikey nameorid internal server error response a status code equal to that given
func (o *DeleteAccessApikeyNameoridInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete access apikey nameorid internal server error response
func (o *DeleteAccessApikeyNameoridInternalServerError) Code() int {
	return 500
}

func (o *DeleteAccessApikeyNameoridInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /access/apikey/{nameorid}][%d] deleteAccessApikeyNameoridInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAccessApikeyNameoridInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /access/apikey/{nameorid}][%d] deleteAccessApikeyNameoridInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAccessApikeyNameoridInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *DeleteAccessApikeyNameoridInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
