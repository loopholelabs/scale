{{ define "rs_refmaps_encode" }}
    {{ $type := .Type }}
    {{- range .Entries }}
        {{- if IsPrimitive .Value }}
            e.encode_map(self.{{ SnakeCase .Name }}.len(), {{ PolyglotPrimitive $type }}, {{ PolyglotPrimitive .Value }})?;
            for (k, v) in &self.{{ SnakeCase .Name }} {
                e.{{ PolyglotPrimitiveEncode $type }}(&k)?;
                e.{{ PolyglotPrimitiveEncode .Value }}(&v)?;
            }
        {{- else }}
            e.encode_map(self.{{ SnakeCase .Name }}.len(), {{ PolyglotPrimitive $type }}, Kind::Any)?;
            for (k, v) in &self.{{ SnakeCase .Name }} {
                e.{{ PolyglotPrimitiveEncode $type }}(&k)?;
                v.encode_self(e)?;
            }
        {{- end }}

    {{- end }}
{{ end }}