// Code generated by scale-signature v0.4.5, DO NOT EDIT.
// output: local_inttest_latest_host

package local_inttest_latest_host

import (
	"errors"
	"github.com/loopholelabs/polyglot"
)

var (
	NilDecode   = errors.New("cannot decode into a nil root struct")
	InvalidEnum = errors.New("invalid enum value")
)

type Stringval struct {
	Value string
}

func NewStringval() *Stringval {
	return &Stringval{

		Value: "",
	}
}

func (x *Stringval) Encode(b *polyglot.Buffer) {
	e := polyglot.Encoder(b)
	if x == nil {
		e.Nil()
	} else {

		e.String(x.Value)

	}
}

func DecodeStringval(x *Stringval, b []byte) (*Stringval, error) {
	d := polyglot.GetDecoder(b)
	defer d.Return()
	return _decodeStringval(x, d)
}

func _decodeStringval(x *Stringval, d *polyglot.Decoder) (*Stringval, error) {
	if d.Nil() {
		return nil, nil
	}

	err, _ := d.Error()
	if err != nil {
		return nil, err
	}

	if x == nil {
		x = NewStringval()
	}

	x.Value, err = d.String()
	if err != nil {
		return nil, err
	}

	return x, nil
}
