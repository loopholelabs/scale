// Code generated by scale-go v0.1.0, DO NOT EDIT.
// signature: example:latest
// schema: example:latest

package main

import (
	scale "example"
	"signature"
)

// needed to satisfy compiler
func main() {}

//export run
func run() uint64 {
	var err error
	ctx := signature.NewExample()
	ctx, err = signature.Read(ctx)
	if err != nil {
		return packUint32(signature.Error(err))
	}
	ctx, err = scale.Example(ctx)
	if err != nil {
		return packUint32(signature.Error(err))
	}
	return packUint32(signature.Write(ctx))
}

//export resize
func resize(size uint32) uint32 {
	return signature.Resize(size)
}

//export identifier
func identifier() uint64 {
	return packUint32(signature.Identifier())
}

func packUint32(offset uint32, length uint32) uint64 {
	return uint64(offset)<<32 | uint64(length)
}
