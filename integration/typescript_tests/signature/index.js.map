{
  "version": 3,
  "sources": ["<stdin>"],
  "sourceRoot": "index.js",
  "sourcesContent": ["// Code generated by scale-signature 0.4.0, DO NOT EDIT.\n// output: local-example-latest-guest\n\n/* eslint no-bitwise: off */\n\nimport { Signature as SignatureInterface, TYPESCRIPT_ADDRESS_OF, TYPESCRIPT_NEXT} from \"@loopholelabs/scale-signature-interfaces\";\nimport { Decoder, Encoder, Kind } from \"@loopholelabs/polyglot\";\n\n(global as any).WRITE_BUFFER = new Uint8Array().buffer;\n(global as any).READ_BUFFER = new Uint8Array().buffer;\n\nexport * from \"./types\";\nimport { ModelWithAllFieldTypes } from \"./types\";\n\nconst hash = \"3a592aa345d412faa2e6285ee048ca2ab5aa64b0caa2f9ca67b2c1e0792101e5\"\n\n// Write serializes the signature into the global WRITE_BUFFER and returns the pointer to the buffer and its size\n//\n// Users should not use this method.\nexport function Write(ctx?: ModelWithAllFieldTypes): number[] {\n  const enc = new Encoder();\n  if (typeof ctx === \"undefined\") {\n    enc.null();\n  } else {\n    ctx.encode(enc);\n  }\n  const len = enc.bytes.buffer.byteLength;\n  (global as any).WRITE_BUFFER = enc.bytes.buffer;\n  const addrof = (global as any)[TYPESCRIPT_ADDRESS_OF];\n  const ptr = addrof((global as any).WRITE_BUFFER);\n  return [ptr, len];\n}\n\n// Read deserializes signature from the global READ_BUFFER\n//\n// Users should not use this method.\nexport function Read(): ModelWithAllFieldTypes | undefined {\n  const dec = new Decoder(new Uint8Array((global as any).READ_BUFFER));\n  return ModelWithAllFieldTypes.decode(dec);\n}\n\n// Error serializes an error into the global writeBuffer and returns a pointer to the buffer and its size\n//\n// Users should not use this method.\nexport function Error(err: Error): number[] {\n  const enc = new Encoder();\n  enc.error(err);\n  const len = enc.bytes.buffer.byteLength;\n  (global as any).WRITE_BUFFER = enc.bytes.buffer;\n  const addrof = (global as any)[TYPESCRIPT_ADDRESS_OF];\n  const ptr = addrof((global as any).WRITE_BUFFER);\n  return [ptr, len];\n}\n\n// Resize resizes the global READ_BUFFER to the given size and returns the pointer to the buffer\n//\n// Users should not use this method.\nexport function Resize(size: number): number {\n  (global as any).READ_BUFFER = new Uint8Array(size).buffer;\n  const addrof = (global as any)[TYPESCRIPT_ADDRESS_OF];\n  return addrof((global as any).READ_BUFFER);\n}\n\n// Hash returns the hash of the Scale Signature\n//\n// Users should not use this method.\nexport function Hash(): number[] {\n  const enc = new Encoder();\n  enc.string(hash);\n  const len = enc.bytes.buffer.byteLength;\n  (global as any).WRITE_BUFFER = enc.bytes.buffer;\n  const addrof = (global as any)[TYPESCRIPT_ADDRESS_OF];\n  const ptr = addrof((global as any).WRITE_BUFFER);\n  return [ptr, len];\n}\n\n// Next calls the next function in the Scale Function Chain\nexport function Next(ctx?: ModelWithAllFieldTypes): ModelWithAllFieldTypes | undefined {\n  const [ptr, len] = Write(ctx);\n  const next = (global as any)[TYPESCRIPT_NEXT];\n  next([ptr, len]);\n  return Read();\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,eAAAA;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,wCAAuF;AACvF,sBAAuC;AAKvC,0BAAc,oBAXd;AAYA,mBAAuC;AAJtC,OAAe,eAAe,IAAI,WAAW,EAAE;AAC/C,OAAe,cAAc,IAAI,WAAW,EAAE;AAK/C,MAAM,OAAO;AAKN,SAAS,MAAM,KAAwC;AAC5D,QAAM,MAAM,IAAI,wBAAQ;AACxB,MAAI,OAAO,QAAQ,aAAa;AAC9B,QAAI,KAAK;AAAA,EACX,OAAO;AACL,QAAI,OAAO,GAAG;AAAA,EAChB;AACA,QAAM,MAAM,IAAI,MAAM,OAAO;AAC7B,EAAC,OAAe,eAAe,IAAI,MAAM;AACzC,QAAM,SAAU,OAAe,uDAAqB;AACpD,QAAM,MAAM,OAAQ,OAAe,YAAY;AAC/C,SAAO,CAAC,KAAK,GAAG;AAClB;AAKO,SAAS,OAA2C;AACzD,QAAM,MAAM,IAAI,wBAAQ,IAAI,WAAY,OAAe,WAAW,CAAC;AACnE,SAAO,oCAAuB,OAAO,GAAG;AAC1C;AAKO,SAASA,OAAM,KAAsB;AAC1C,QAAM,MAAM,IAAI,wBAAQ;AACxB,MAAI,MAAM,GAAG;AACb,QAAM,MAAM,IAAI,MAAM,OAAO;AAC7B,EAAC,OAAe,eAAe,IAAI,MAAM;AACzC,QAAM,SAAU,OAAe,uDAAqB;AACpD,QAAM,MAAM,OAAQ,OAAe,YAAY;AAC/C,SAAO,CAAC,KAAK,GAAG;AAClB;AAKO,SAAS,OAAO,MAAsB;AAC3C,EAAC,OAAe,cAAc,IAAI,WAAW,IAAI,EAAE;AACnD,QAAM,SAAU,OAAe,uDAAqB;AACpD,SAAO,OAAQ,OAAe,WAAW;AAC3C;AAKO,SAAS,OAAiB;AAC/B,QAAM,MAAM,IAAI,wBAAQ;AACxB,MAAI,OAAO,IAAI;AACf,QAAM,MAAM,IAAI,MAAM,OAAO;AAC7B,EAAC,OAAe,eAAe,IAAI,MAAM;AACzC,QAAM,SAAU,OAAe,uDAAqB;AACpD,QAAM,MAAM,OAAQ,OAAe,YAAY;AAC/C,SAAO,CAAC,KAAK,GAAG;AAClB;AAGO,SAAS,KAAK,KAAkE;AACrF,QAAM,CAAC,KAAK,GAAG,IAAI,MAAM,GAAG;AAC5B,QAAM,OAAQ,OAAe,iDAAe;AAC5C,OAAK,CAAC,KAAK,GAAG,CAAC;AACf,SAAO,KAAK;AACd;",
  "names": ["Error"]
}
